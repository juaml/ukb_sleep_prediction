;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;0.016115188598632812;0.009580135345458984;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303181696704096,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303181696704096,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5623913830557568;0.5591754666938308;0.6419217519880281;0.6393356513664223;0.7317608337904553;0.7357059908463693;0.588962472406181;0.5906548206646923;0.9659666908037654;0.9751901484969214;0.49808751206854934;0.5016575742484607;9362;2341;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;0.009157896041870117;0.011698246002197266;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7305508821184068,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7305508821184068,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5480056722181994;0.5623405054026318;0.6383088249440512;0.6382827545061736;0.7324875896304468;0.7323652880049549;0.5915367483296213;0.5906315906315907;0.9616220130340333;0.9636001448750453;0.50320683985035;0.5015917391041893;9362;2341;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;0.00856924057006836;0.009473800659179688;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303623422801762,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303623422801762,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5428622073376781;0.564086292142038;0.6229092394188784;0.6442582296063457;0.7256538675570395;0.7312988720503771;0.5892453682783552;0.5917795945794602;0.944243301955105;0.9568996740311482;0.4986841509775525;0.5038404620155741;9362;2341;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;0.013583183288574219;0.009524822235107422;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7304482458677967,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7304482458677967,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5665934480676329;0.5580832192271712;0.6436367563448171;0.638670601924582;0.7366132101114433;0.7357011384552458;0.5893866898651587;0.5899846927618632;0.9818840579710145;0.9770052507695093;0.4992753623188406;0.5002213753847546;9363;2340;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;0.013061046600341797;0.021611928939819336;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7304567983016864,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7304567983016864,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5771807065217391;0.5552687341571609;0.654671007801445;0.6370542463015136;0.7399783315276273;0.737990378751948;0.5908304498269896;0.5896491987873538;0.9898550724637681;0.9860583016476553;0.5022192028985507;0.49953956749049433;9363;2340;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;0.009939908981323242;0.007511138916015625;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7304811603283442,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7304811603283442,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5640406257542844;0.5587478447950621;0.6388229130989711;0.639420356206911;0.7365547365547366;0.7348081387409532;0.591148115687993;0.5897632617273126;0.9768283852280956;0.9744657732705542;0.5024766926140478;0.4998630949686104;9362;2341;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;0.005676746368408203;0.006869077682495117;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.730343002528064,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.730343002528064,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5491318187303886;0.5624392581190389;0.6302693617813533;0.642637483906747;0.7293274531422271;0.7324079828741109;0.5887850467289719;0.5919187409309075;0.9580014482259233;0.9603404563563926;0.4977507241129616;0.5041285615115296;9362;2341;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;0.010702133178710938;0.011527776718139648;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302957082143238,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302957082143238,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5574119750181028;0.5603712281555596;0.6435522446008947;0.6385389320494046;0.7338090010976949;0.733995207120849;0.5908086610693769;0.5901133986568314;0.9681390296886314;0.9706628033321261;0.501777848177649;0.5005657766660631;9362;2341;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;0.006779193878173828;0.008755922317504883;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7304395661449721,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7304395661449721,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5511141304347826;0.5615972175070915;0.6303519392745067;0.6401742896390382;0.7313186813186813;0.7331269349845201;0.5889380530973451;0.5912117177097204;0.9644927536231884;0.9646931015752308;0.49839221014492757;0.5026590507876154;9363;2340;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;0.007252931594848633;0.01595020294189453;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7305877732413261,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7305877732413261,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5744429347826088;0.5560082316751163;0.6561796459280147;0.6371552890655078;0.7386702849389416;0.7380193858876161;0.5904555314533623;0.5898158179848321;0.986231884057971;0.9856961796125294;0.5014492753623189;0.4998793398062647;9363;2340;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;0.012940168380737305;0.0072100162506103516;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303732298613874,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303732298613874,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5604536265990828;0.5595744389864783;0.6465303029857098;0.6373949537815654;0.7320010949904189;0.7348754448398577;0.5884683098591549;0.5906490649064906;0.9681390296886314;0.9722926475914524;0.497090348177649;0.5016411154623929;9362;2341;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;0.005772113800048828;0.006684780120849609;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7305268385021334,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7305268385021334,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5485087798696596;0.5621914095511892;0.6302848982872803;0.6400322069619824;0.7324175824175824;0.7331225079059536;0.5900841080123949;0.5908687943262412;0.9652425778421434;0.9655921767475553;0.500329622254405;0.502066921707111;9362;2341;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;0.01112222671508789;0.011836767196655273;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.730485712339447,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.730485712339447,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5482881517016654;0.5623521303045393;0.6261548289326794;0.644510321178597;0.732246476927328;0.7320739106453392;0.5920464700625558;0.5910710309507905;0.9594496741491673;0.9614270191959435;0.5042040037412503;0.5024583012646384;9362;2341;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;0.00699615478515625;0.006912708282470703;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302692041877586,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302692041877586,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5659182518115942;0.5582985356690204;0.639064359278775;0.6394615803177148;0.7334242837653479;0.7359661687470159;0.5881838074398249;0.5903917706281462;0.9739130434782609;0.9768241897519464;0.4968523550724638;0.5010423032093065;9363;2340;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;0.005386829376220703;0.019009828567504883;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7304884322357073,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7304884322357073,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5715375905797102;0.5567927115396222;0.6553977551039345;0.6360108218657308;0.7380174291938998;0.7369993211133741;0.5911867364746946;0.5895514282611056;0.9818840579710145;0.9827992033315227;0.502921195652174;0.4993423099990947;9363;2340;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;0.0063228607177734375;0.007302999496459961;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7304590668021028,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7304590668021028,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5650283610909969;0.5584501718504769;0.63552738063355;0.6412651851516498;0.7399727148703956;0.73419795221843;0.5936952714535902;0.5891761612620509;0.9818971759594497;0.9739224918507787;0.5076152546463916;0.49867999592538936;9362;2341;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;0.006675004959106445;0.007205009460449219;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7304826057457023,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7304826057457023,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5571834268645908;0.5601942844153688;0.6439283025321731;0.6400377702550284;0.7308641975308642;0.7340885684860968;0.588339222614841;0.5911754948579011;0.9645184648805214;0.9681274900398407;0.49684256577359404;0.502683536686587;9362;2341;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;0.007906913757324219;0.007133960723876953;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303445362356317,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303445362356317,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5537521874245717;0.5612066176581553;0.6346542230865401;0.6400846486237064;0.7354555433589463;0.7326555845583185;0.5921343349536015;0.5901947764497565;0.9703113685734974;0.9657732705541471;0.5044265176200821;0.5007251769437402;9362;2341;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;0.0077860355377197266;0.02143406867980957;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302008889632224,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302008889632224,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5612065972222222;0.5590371844634558;0.6519210468799899;0.6354134519654341;0.7358953393295176;0.7352178069097365;0.5897771952817824;0.5901567466842047;0.9782608695652174;0.9748325185587543;0.5000679347826087;0.5005673009460438;9363;2340;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;0.006715059280395508;0.0070858001708984375;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7306766346070387,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7306766346070387,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5576596467391305;0.5601150869092884;0.6368833593555385;0.6402963711775533;0.7335526315789473;0.7344872408839023;0.58994708994709;0.5902793050362877;0.9695652173913043;0.9719355422777476;0.5004076086956522;0.5008115211388738;9363;2340;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;0.006920814514160156;0.007517099380493164;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7305811520488926,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7305811520488926,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5672142770938933;0.5579203074067367;0.6481616225719272;0.6370351275636139;0.7376156777354382;0.7354504565898868;0.5909289140863497;0.5895979020979021;0.9811730629978277;0.9771821803694314;0.5020448648322472;0.4995285901847157;9362;2341;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;0.010558128356933594;0.013258934020996094;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7304592282056058,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7304592282056058,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5689642167511465;0.557409849239406;0.6472977724350745;0.6366993767711351;0.7330242705208617;0.7365694027815654;0.5879265091863517;0.5906407172534441;0.9732078204199855;0.9782687432089823;0.4959789102099928;0.5016343716044911;9362;2341;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;0.005956172943115234;0.008164167404174805;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302942297685184,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302942297685184,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5582284878107652;0.5600778467569119;0.6307182483411118;0.6414403196342489;0.731129476584022;0.7340192043895748;0.5900400177856825;0.5907485096047692;0.9608979000724113;0.9690329590727997;0.5002406167028723;0.5018341878697332;9362;2341;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;0.006337881088256836;0.007075071334838867;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301449843215595,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301449843215595,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5498694142512077;0.5618482274880802;0.6320210580565341;0.6430214949626027;0.7368131868131869;0.7323169894245296;0.5933628318584071;0.5898882619758823;0.9717391304347827;0.9654173456454825;0.507223731884058;0.5000263811560746;9363;2340;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;0.0057201385498046875;0.009207963943481445;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.730662581971365,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.730662581971365,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5518595259661836;0.5617840074084133;0.6423695999323773;0.639229787533018;0.7312242090784044;0.7331499312242091;0.5893569844789357;0.591105689253632;0.9630434782608696;0.9650552236103567;0.4992300724637681;0.5024494868051783;9363;2340;4;4;0e771c1190ea4a0ce23c7d5b46c62924
