;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;0.01466989517211914;0.009001970291137695;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.561155618092277;0.561946310915497;0.6301823861117991;0.637151457591907;0.7451085499865988;0.7451243214261779;0.5937633489961555;0.5938468112381156;1.0;0.999820143884892;0.5;0.499910071942446;9362;2341;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;0.007236957550048828;0.0073070526123046875;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5536686108526429;0.5637728533638109;0.6357801105439271;0.6358963563654842;0.7447721179624665;0.7449560962531001;0.5935897435897436;0.5937600170958436;0.9992805755395684;0.9994604316546762;0.4996402877697842;0.4997302158273381;9362;2341;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;0.005450010299682617;0.0067670345306396484;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5677756848149241;0.5648930986720355;0.6410358531016008;0.6441328129552493;0.7451085499865988;0.7452084171022652;0.5937633489961555;0.5938901944029054;1.0;1.0;0.5;0.5;9362;2341;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;0.005766153335571289;0.00893402099609375;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.547276031806134;0.5655923144734278;0.6292045805382083;0.6378872183842135;0.7457081545064378;0.7448192609482932;0.5945252352437981;0.5938402309913379;1.0;0.9987410071942446;0.5010526315789474;0.5000278793531044;9363;2340;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;0.006498813629150391;0.014016866683959961;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5801412343809164;0.5573093326548333;0.6538959294864971;0.631422396396425;0.7453083109919572;0.7451584801983515;0.594017094017094;0.5938267649257717;1.0;1.0;0.5;0.5;9363;2340;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;0.006979942321777344;0.007191896438598633;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5581285129625007;0.5627142473291225;0.6291134337310323;0.6375567128213959;0.7451085499865988;0.7450402144772118;0.5937633489961555;0.5938034188034188;1.0;0.9996402877697842;0.5;0.4998201438848921;9362;2341;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;0.004858255386352539;0.006767749786376953;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5555095355891942;0.5632860544809812;0.6265475554350133;0.6382210496862746;0.7451085499865988;0.7450402144772118;0.5937633489961555;0.5938034188034188;1.0;0.9996402877697842;0.5;0.4998201438848921;9362;2341;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;0.004602670669555664;0.013665199279785156;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.570120433621557;0.5597028873481962;0.6457023970414757;0.6333070020264966;0.7451085499865988;0.7452084171022652;0.5937633489961555;0.5938901944029054;1.0;1.0;0.5;0.5;9362;2341;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;0.004653215408325195;0.00665593147277832;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5747413858386975;0.5585064186357986;0.647754122326561;0.6329588583295993;0.7453083109919572;0.7451584801983515;0.594017094017094;0.5938267649257717;1.0;1.0;0.5;0.5;9363;2340;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;0.004837751388549805;0.006911039352416992;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.550488072699735;0.5657633031098129;0.6333103985183703;0.6390768840676415;0.7457081545064378;0.7447536037546094;0.5945252352437981;0.5936932121859968;1.0;0.9989208633093525;0.5010526315789474;0.4997233819570691;9363;2340;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;0.00505518913269043;0.006757020950317383;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5783227046123354;0.5575933624483895;0.6536510534198778;0.6314426717663424;0.7451085499865988;0.7452084171022652;0.5937633489961555;0.5938901944029054;1.0;1.0;0.5;0.5;9362;2341;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;0.004443168640136719;0.0077152252197265625;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5433999803311924;0.5663933503381409;0.6249796271722776;0.6387511191653825;0.7442983632948752;0.7446137324652661;0.5934959349593496;0.5939608095085127;0.9978417266187051;0.9976618705035971;0.4994466256647679;0.500146032569;9362;2341;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;0.004889726638793945;0.006724119186401367;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5721043354590776;0.5591295427624234;0.6358374435358846;0.6357468302359681;0.7451085499865988;0.7452084171022652;0.5937633489961555;0.5938901944029054;1.0;1.0;0.5;0.5;9362;2341;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;0.005631923675537109;0.007359027862548828;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.532710336993563;0.5689944468301247;0.6219421532282589;0.6395382426437257;0.7441485068603713;0.7431266846361186;0.594327460249248;0.5941810344827586;0.9949640287769784;0.991726618705036;0.5006399091253313;0.5007278899467856;9363;2340;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;0.008949756622314453;0.007069110870361328;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5825774327906096;0.5580986564942104;0.646905444358477;0.6365245933315795;0.7453083109919572;0.7451584801983515;0.594017094017094;0.5938267649257717;1.0;1.0;0.5;0.5;9363;2340;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;0.010396003723144531;0.009503841400146484;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5627642996013285;0.5616067508959692;0.6314332096466575;0.6371405538744863;0.7451085499865988;0.7452084171022652;0.5937633489961555;0.5938901944029054;1.0;1.0;0.5;0.5;9362;2341;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;0.006220102310180664;0.01367807388305664;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5940448902707488;0.555958147737465;0.6675125263623927;0.6330008121390441;0.7451085499865988;0.7452084171022652;0.5937633489961555;0.5938901944029054;1.0;1.0;0.5;0.5;9362;2341;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;0.0045070648193359375;0.006929874420166016;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5665588664714916;0.5605385891181847;0.6343427685747057;0.6363256981796804;0.7451085499865988;0.7452084171022652;0.5937633489961555;0.5938901944029054;1.0;1.0;0.5;0.5;9362;2341;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;0.014013051986694336;0.01133418083190918;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5223328284740628;0.5714602916667455;0.6127833631451449;0.6419944031922407;0.7428262046561992;0.7423225544030914;0.5954861111111112;0.5956914372755957;0.9870503597122302;0.9847122302158273;0.5029988640666414;0.5037944532620026;9363;2340;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;0.005084037780761719;0.007174968719482422;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5631294964028777;0.5614636400267112;0.6412181453272532;0.6347787771872513;0.7453083109919572;0.7451584801983515;0.594017094017094;0.5938267649257717;1.0;1.0;0.5;0.5;9363;2340;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;0.004907846450805664;0.006759166717529297;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5748273305645704;0.5604626871884921;0.6486178376882314;0.6370086825434828;0.7451085499865988;0.7452084171022652;0.5937633489961555;0.5938901944029054;1.0;1.0;0.5;0.5;9362;2341;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;0.004934072494506836;0.009414911270141602;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5718055208829782;0.5592451341399263;0.6464959666084141;0.633195677909188;0.7451085499865988;0.7452084171022652;0.5937633489961555;0.5938901944029054;1.0;1.0;0.5;0.5;9362;2341;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;0.01361989974975586;0.016452789306640625;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5558162933375697;0.5632803304962553;0.6294452141335939;0.6377554166808279;0.7444355054974524;0.7450901534955426;0.5934159897392048;0.5938668661181751;0.9985611510791367;0.9996402877697842;0.49928057553956834;0.49995165361661226;9362;2341;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;0.004695892333984375;0.017175912857055664;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5588049981067778;0.5625778919331009;0.6314739328610788;0.6371369030270551;0.7449718423169751;0.7449061662198392;0.5938435228730227;0.5936965811965812;0.9992805755395684;0.9994604316546762;0.4996402877697842;0.4997302158273381;9363;2340;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;0.005208730697631836;0.006585121154785156;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvc',
                 WrapModel(C=0.001,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVC(C=0.001, dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5486584627035214;0.5651293847908788;0.6315251167680023;0.6374820743341589;0.7451716738197425;0.7448719667515753;0.5940975192472199;0.5937166061124172;0.9992805755395684;0.9992805755395684;0.5001666035592579;0.49977176292098063;9363;2340;4;4;0e771c1190ea4a0ce23c7d5b46c62924
