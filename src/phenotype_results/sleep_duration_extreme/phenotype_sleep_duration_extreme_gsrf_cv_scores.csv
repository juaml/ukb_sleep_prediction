;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;94.5616409778595;0.10682296752929688;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5465431911340519;0.6766688472125435;0.6360050528070094;0.7553134100576793;0.6883691529709229;0.7359555025824394;0.6173469387755102;0.6627074985689754;0.7778571428571428;0.8274075397534394;0.5302675724912707;0.6006891616429879;9362;2341;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;92.43455410003662;0.10419988632202148;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5465056171246394;0.6777356300484442;0.6451765362001707;0.75344114202862;0.6793893129770993;0.7378440548901404;0.6123853211009175;0.6634807417974322;0.7628571428571429;0.8309808826156869;0.5222362228632155;0.6022102288244437;9362;2341;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;92.38653683662415;0.23127222061157227;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5293366204856669;0.6826072978849664;0.620772011541045;0.7588998302961236;0.6709388016661326;0.7400874056416369;0.60801393728223;0.666523543724059;0.7483917083631165;0.8319042515183994;0.5159155994044882;0.6064409674170106;9362;2341;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;93.25900506973267;0.10637497901916504;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5141618538822705;0.6841600846821123;0.6164711501590219;0.7598879610353936;0.6606856776674143;0.7420143544443568;0.5987224157955865;0.6643129501482842;0.7369549678341673;0.8403001071811361;0.5013148909308986;0.6044794028601563;9363;2340;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;94.49155712127686;0.24782085418701172;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.528736557689985;0.680665998623109;0.6218794711986584;0.7581845952449964;0.673871582962492;0.7393020685299226;0.6067544361763022;0.6624221844934918;0.7576840600428878;0.8363701321900678;0.51380483554748;0.6013191962411163;9363;2340;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;93.20589709281921;0.24544382095336914;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.518865568544102;0.684333027012906;0.6154973172317111;0.7602669213560466;0.6713735558408216;0.737455125648185;0.6095571095571095;0.6661862208129143;0.7471428571428571;0.825799535465428;0.5175671777744041;0.6053300466171762;9362;2341;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;91.40382599830627;0.24013400077819824;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5248208592682556;0.6829633879466352;0.6205939568877972;0.7585977383540006;0.6685678073510773;0.740111199364575;0.6007972665148064;0.6662376662376662;0.7535714285714286;0.832410219760586;0.5043096250189768;0.6062449505177432;9362;2341;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;88.3265221118927;0.10443496704101562;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5461961759157663;0.6750122633747668;0.6358907208393261;0.7526027160749893;0.6782051282051282;0.7349531522947436;0.6147588611272516;0.6615208690680389;0.7562544674767692;0.8267238299392641;0.5262164057129068;0.5988029351609179;9362;2341;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;92.00250887870789;0.23842906951904297;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5404501773317665;0.6775609482992171;0.6223709142569592;0.758859110236862;0.6875981161695447;0.7400887919619908;0.6131019036954087;0.656124844634719;0.7827019299499642;0.8486959628438728;0.5241883719887972;0.593670690585283;9363;2340;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;90.83111500740051;0.24819517135620117;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5240489829155333;0.6836466922591876;0.6214127974556269;0.7595447603087541;0.6658089417819234;0.7387387387387387;0.6052631578947368;0.6670986321094312;0.7398141529664046;0.8276170060735977;0.5112460775459016;0.606769990420597;9363;2340;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;91.5726420879364;0.2386608123779297;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5216046758767269;0.682501178657415;0.6247029535366867;0.7577584047520431;0.6602748481943113;0.7404235070187961;0.5974551764025449;0.6657159155733029;0.7378571428571429;0.8340182240485975;0.49910923030211024;0.605720931413409;9362;2341;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;90.06388711929321;0.11285090446472168;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5555738575982997;0.6768186618661439;0.6450477429942685;0.7547844900119842;0.6813397129186602;0.7366500039673094;0.6155619596541787;0.6625749357693406;0.7628571428571429;0.8293728783276756;0.5270183695157128;0.6007422160562681;9362;2341;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;93.61430311203003;0.2779116630554199;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5351073484396649;0.6777726854398812;0.6250676715892478;0.7569816273064864;0.6811731315042573;0.7404855129209084;0.6094808126410836;0.6592303402119353;0.7719799857040743;0.8445873526259379;0.5186863835102112;0.5976390535712048;9362;2341;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;94.26299905776978;0.25842976570129395;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5167475781623279;0.686151903046383;0.6149090619138895;0.7615686684244883;0.6692258477287268;0.7400159108989658;0.6056745801968731;0.667096959265634;0.7476769120800572;0.830832440157199;0.5119893593343963;0.6071824883388917;9363;2340;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;88.03933000564575;0.10296082496643066;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5267433319229843;0.6789856413336768;0.6285789975617331;0.7556224303262682;0.6856072432094911;0.7378164556962026;0.6086474501108647;0.6621698381141721;0.7848463187991422;0.8329760628795999;0.5172903219925573;0.6005517764597202;9363;2340;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;95.15176010131836;0.10522890090942383;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5463697434340367;0.67801779600673;0.6351079840295851;0.7555317533124499;0.6738578680203046;0.739644038431249;0.6061643835616438;0.6613153077031404;0.7585714285714286;0.8390209040557441;0.5126544709275846;0.6001213418021085;9362;2341;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;88.23863410949707;0.11117982864379883;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5369561257021406;0.6791443006486353;0.6335792093323911;0.7546509638515376;0.6804901036757776;0.7379381607185438;0.6074032529444756;0.6646620847651775;0.7735714285714286;0.8293728783276756;0.514840974647032;0.6036638628026161;9362;2341;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;90.07123827934265;0.1062469482421875;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5288650218764085;0.681639990979016;0.6170845282209425;0.7599631172937449;0.6715701950751519;0.7388959390862944;0.6076388888888888;0.6644793152639087;0.7505360972122945;0.8320828867452662;0.5153954371411791;0.60360786207614;9362;2341;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;92.20626282691956;0.24293994903564453;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5331434552842131;0.6825889487186422;0.619350607483823;0.7611442382661805;0.6750645994832042;0.7370772176132737;0.6157925751325869;0.665897953300663;0.7469621157969979;0.8252947481243301;0.5270411004064692;0.6048120486969593;9363;2340;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;88.54423499107361;0.09909296035766602;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5365548794151584;0.679167858754336;0.6257276815312984;0.755455400373954;0.6760653636654919;0.7371011271630418;0.6126596980255516;0.6632857142857143;0.7541100786275912;0.8294033583422651;0.5226448374009369;0.6016870709374008;9363;2340;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;92.29294276237488;0.2544221878051758;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5371982693183543;0.6806266922068144;0.6364118773223789;0.7548805322430234;0.6722044728434505;0.7398477157360406;0.608092485549133;0.6652403366138925;0.7514285714285714;0.833303555476148;0.5154592378928192;0.6049651907526823;9362;2341;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;88.62544417381287;0.09772968292236328;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5383539547593745;0.6785192266488806;0.6280788816525477;0.7558617067831259;0.6773787019533711;0.7404328732747805;0.6059751972942503;0.6598183088749127;0.7678571428571429;0.8434875826335537;0.5125151814179445;0.5985034194708273;9362;2341;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;92.08345293998718;0.25165581703186035;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5451065289280028;0.6798052069226181;0.6334802669704556;0.7580345342080264;0.6793650793650794;0.7387287801026451;0.6110793832095945;0.6619499080232064;0.7648320228734811;0.8356555912826009;0.5209510432838743;0.6004792302852962;9362;2341;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;91.9805212020874;0.11563491821289062;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5273479842516934;0.6803258562747936;0.6222422953603995;0.7560901437195346;0.6788528206744406;0.7405008294494035;0.6071025930101466;0.663786999008639;0.7698355968548963;0.8372633083244015;0.5145671076729317;0.6033594098062911;9363;2340;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;93.08131790161133;0.24923324584960938;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5254603447581733;0.6808513474979444;0.612284667605533;0.760535115470726;0.6726171501434491;0.7334884840702993;0.6070195627157653;0.6658895526737578;0.7541100786275912;0.8163629867809932;0.5141432433520527;0.6036662211461407;9363;2340;4;4;0e771c1190ea4a0ce23c7d5b46c62924
