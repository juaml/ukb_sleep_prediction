;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;0.005939960479736328;0.038195133209228516;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7319141408383969,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7319141408383969,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5620133928571429;0.5464820590201375;0.2904757030985197;0.2859019223145585;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;0.005825996398925781;0.007513761520385742;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7310153668928656,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7310153668928656,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5437559523809523;0.5515780302190265;0.28401480317012623;0.2876110519521522;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;0.00443267822265625;0.009455204010009766;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7315147515248526,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7315147515248526,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5540124694427365;0.5491860900732685;0.3082086025392039;0.28203868720315417;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;0.006120920181274414;0.00730586051940918;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7312649376306258,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7312649376306258,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5446782093666367;0.5507621009613276;0.2798924678421387;0.2889687981553589;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;0.005496025085449219;0.005923748016357422;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7308548409547764,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7308548409547764,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5407068789858107;0.5522989020513228;0.2788208550293574;0.2891714527480524;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;0.005347251892089844;0.006368875503540039;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7311783070739017,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7311783070739017,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5486071428571428;0.5503550454228943;0.29370956275252075;0.2852460680925293;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;0.004875898361206055;0.0065212249755859375;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7314166309294398,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7314166309294398,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5642693452380952;0.5463306834245952;0.30424765038897833;0.28338609607797977;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;0.00685572624206543;0.007935047149658203;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7315691108388684,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7315691108388684,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.545689606520467;0.5508381977021201;0.2890347971594679;0.28695203067807307;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;0.008770227432250977;0.0067958831787109375;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7315316366122069,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7315316366122069,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5338201703186867;0.5539290819258069;0.26262091338019655;0.29463199752117575;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;0.004994869232177734;0.006009101867675781;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7308250119942592,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7308250119942592,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5552956517348209;0.5484664694903172;0.3013061554620952;0.28421715683600984;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;0.005789995193481445;0.0060977935791015625;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7312065943849093,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7312065943849093,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5570595238095238;0.5478985816942514;0.2999512835457786;0.28463665844641806;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;0.004807949066162109;0.016028165817260742;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7312389845010345,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7312389845010345,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5410788690476191;0.5513294213421759;0.28360891430884916;0.2886072705512967;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;0.004685163497924805;0.006915092468261719;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.731528893592714,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.731528893592714,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5426851183527741;0.5518476177167335;0.2887725936697912;0.2868565029270318;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;0.004677772521972656;0.005899190902709961;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7313321386994408,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7313321386994408,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5517743262550384;0.5497262933101023;0.2838884127532615;0.2880818285282276;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;0.0054569244384765625;0.007825136184692383;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7312024594285326,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7312024594285326,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5508668906295019;0.549940832228893;0.28885334015522857;0.28666823181597145;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;0.010239124298095703;0.0060350894927978516;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7312608836677559,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7312608836677559,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5437232142857144;0.5516323582701874;0.284575645018679;0.2874962252575543;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;0.004405021667480469;0.009005069732666016;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7311610586254202,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7311610586254202,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5083095238095238;0.5596956626155586;0.2562240230322539;0.2956188908002703;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;0.005499839782714844;0.0059032440185546875;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7317000966417666,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7317000966417666,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5457178246495754;0.5512399587609556;0.2845346341443248;0.28869264001184164;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;0.005134105682373047;0.006016969680786133;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7309142075828564,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7309142075828564,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5679225219284566;0.545255447188676;0.30604971809601433;0.28268113985864085;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;0.005706310272216797;0.00613093376159668;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7314705593676063,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7314705593676063,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5771097507002552;0.5431759341780846;0.31600219356541936;0.27999656283776675;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;0.004805088043212891;0.005979061126708984;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7316476742888689,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7316476742888689,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.563764880952381;0.5460463201892882;0.304776378503338;0.28325298093166384;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;0.008999824523925781;0.0059931278228759766;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.730857735351606,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.730857735351606,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5536056547619048;0.5494400124518035;0.2793363660131849;0.2900552763547425;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;0.0044002532958984375;0.008367776870727539;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.731353926362328,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.731353926362328,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5392826060481847;0.5528232169576616;0.280758167116566;0.28862808229191944;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;0.004909992218017578;0.0060710906982421875;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7313381177982482,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7313381177982482,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5226962867912424;0.5568569017049386;0.26432041803775386;0.29322056122819445;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;0.004331111907958984;0.007022857666015625;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.731337133686924,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.731337133686924,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5654021974496752;0.5451497108138021;0.31214365447601644;0.28044331519182764;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;4;0e771c1190ea4a0ce23c7d5b46c62924
