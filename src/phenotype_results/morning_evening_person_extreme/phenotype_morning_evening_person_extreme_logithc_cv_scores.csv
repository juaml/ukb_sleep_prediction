;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;0.00706171989440918;0.014753103256225586;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.731126380309146,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.731126380309146,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5475981548896609;0.5675721820860655;0.29025374990729136;0.30067288731373876;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;0.005293130874633789;0.012078046798706055;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7320561779871255,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7320561779871255,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5536753981335452;0.5658360915618219;0.29310299190946515;0.301298790727381;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;0.013549089431762695;0.01615118980407715;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7317216839030485,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7317216839030485,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5767244548268133;0.5606353239022424;0.307657537860036;0.2965648725107411;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;0.010169029235839844;0.014941930770874023;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7313967846086261,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7313967846086261,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5580154391623484;0.5651107132904862;0.29563707414971285;0.30047382215871604;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;0.008871793746948242;0.006849050521850586;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7309579138158074,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7309579138158074,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5793124710960382;0.55889182210575;0.3204964410749832;0.2950863990762337;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;0.011213064193725586;0.016801834106445312;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7312460559941087,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7312460559941087,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5374209958378295;0.570018272491729;0.28320394475985655;0.3023380257247986;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;0.00644993782043457;0.013691186904907227;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7317442530812795,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7317442530812795,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5698927440680177;0.5618323370113008;0.3074114737585473;0.2976425461503277;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;0.018696069717407227;0.02158188819885254;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7313383638722308,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7313383638722308,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5322701616250253;0.5711017078535771;0.27183234368180287;0.30770215875826645;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;0.014250993728637695;0.006264925003051758;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7312823473946382,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7312823473946382,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.6078858901234422;0.552438271513441;0.33535445009578513;0.2914029002402154;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;0.005200862884521484;0.01767134666442871;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7315824850332414,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7315824850332414,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5681688821429842;0.5623719702719048;0.3158292868167657;0.29552744516235274;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;0.01590704917907715;0.021350860595703125;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7317769829822371,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7317769829822371,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5793643500017788;0.559720494984051;0.3262353758453599;0.2936711267962533;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;0.005206108093261719;0.005964040756225586;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7312309956571102,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7312309956571102,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5458772574735269;0.5677760847138064;0.2936580501255193;0.3014816695786052;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;0.007447004318237305;0.012550830841064453;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7312709923817146,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7312709923817146,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5881926575043578;0.5575403766112106;0.314662720484852;0.2943311557141075;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;0.02924489974975586;0.006012916564941406;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7313933785341287,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7313933785341287,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5387327910258387;0.5698530937614874;0.2775377724284972;0.30596131790230513;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;0.010966062545776367;0.006040096282958984;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.731494055083496,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.731494055083496,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5651450830655393;0.5631386663860266;0.30006784187791813;0.2996621652200467;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;0.0049800872802734375;0.028801679611206055;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7317227684770821,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7317227684770821,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5803470847019483;0.5592881398892459;0.32318806820487034;0.29413550158414314;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;0.02249884605407715;0.009818077087402344;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7317037444381561,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7317037444381561,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5590322657148616;0.5647942519654694;0.3035918987001455;0.2974327724513196;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;0.012240171432495117;0.01759791374206543;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7318466783503973,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7318466783503973,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5743320961449526;0.5607995762234528;0.3015478631374956;0.29758557720984824;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;0.006074190139770508;0.005861997604370117;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7313620464032361,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7313620464032361,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.554406149577261;0.5655069384330792;0.2999504817246546;0.2998029145416061;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;0.005764007568359375;0.005873918533325195;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7306141109248117,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7306141109248117,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.545386631250667;0.5678661316716274;0.2783686998431274;0.3049175192321205;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;0.008502006530761719;0.012861967086791992;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7312215339193749,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7312215339193749,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5497044384627242;0.5670613601463281;0.2867391256297882;0.3026016974047421;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;0.0056378841400146484;0.006124973297119141;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7313991892792993,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7313991892792993,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5959033451518422;0.5556275272438367;0.31823325893535215;0.29498131250242443;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;0.011155128479003906;0.006001949310302734;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7315463193217077,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7315463193217077,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5609680900262063;0.5644012692544853;0.29215382265164236;0.30054114936176013;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;0.005519866943359375;0.005767345428466797;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7315704324856778,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7315704324856778,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.537063772515445;0.5699371190606064;0.2835798830801789;0.3044649274860317;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;0.0054819583892822266;0.005753755569458008;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7314220110507469,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7314220110507469,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5725934116754219;0.561211550319574;0.3352437411287561;0.2933460023780084;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;5344;1336;4;4;0e771c1190ea4a0ce23c7d5b46c62924
