;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;0.0073931217193603516;0.010577917098999023;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299046810538085,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299046810538085,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5833526468489206;0.6053444166141257;0.4337503083010649;0.4456221059710813;0.026607538802660754;0.022193452931385242;0.5625;0.47244094488188976;0.013626040878122634;0.011363636363636364;0.5037774610288271;0.5020515624384285;14508;3627;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;0.008143186569213867;0.015978097915649414;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7297068230952968,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7297068230952968,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6108068657971129;0.5985085163009762;0.4496489350854499;0.4417193832257706;0.0;0.0011346444780635401;0.0;0.42857142857142855;0.0;0.0005680742283658398;0.5;0.5000672819391532;14508;3627;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;0.006231069564819336;0.016738176345825195;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7297307844357612,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7297307844357612,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.603642405853069;0.6002022829397116;0.45059421747948214;0.4411816338929676;0.0030257186081694403;0.0003784295175023652;1.0;0.25;0.0015151515151515152;0.0001893580761219466;0.5007575757575757;0.4999321126567886;14508;3627;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;0.014093160629272461;0.007575035095214844;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7300100146538052,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7300100146538052,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6059074161642433;0.5996016195030568;0.4432200650922937;0.4431059634131078;0.0;0.0022671452862270923;0.0;0.5;0.0;0.0011361484567316796;0.49978326831382747;0.5002429414658212;14508;3627;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;0.006341695785522461;0.008698225021362305;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298385281561929,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298385281561929,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6009987718537784;0.600828239952699;0.4422736989325429;0.4434772012318043;0.0;0.0003786444528587656;0.0;1.0;0.0;0.0001893580761219466;0.5;0.5000946790380609;14508;3627;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;0.006907939910888672;0.007370948791503906;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7297644542609467,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7297644542609467,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5959785977796789;0.6020733690119662;0.44728904439836153;0.44212026227437407;0.012003000750187547;0.004896421845574388;0.6666666666666666;0.43333333333333335;0.006056018168054504;0.002462121212121212;0.5021607063953889;0.5003099509398274;14508;3627;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;0.008845090866088867;0.0075397491455078125;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298417806166163,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298417806166163,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6036438835691111;0.600196454643015;0.44217839888795785;0.4435364839364121;0.001514004542013626;0.0003785727806170736;1.0;0.5;0.0007575757575757576;0.0001893580761219466;0.5003787878787879;0.5000404902443035;14508;3627;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;0.008227109909057617;0.007491111755371094;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298379540821882,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298379540821882,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.605789527262219;0.5996729340489031;0.44502027701290076;0.4427376743293373;0.0015117157974300832;0.004526593738211996;0.3333333333333333;0.5714285714285714;0.0007575757575757576;0.0022722969134633592;0.49994532450644286;0.5006484493129146;14508;3627;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;0.006654024124145508;0.007436990737915039;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298633876611765,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298633876611765,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5884263637677162;0.6040051336622367;0.4345578595137706;0.44532564527159635;0.01199400299850075;0.011989509179467965;0.5714285714285714;0.5614035087719298;0.006060606060606061;0.006059458435902291;0.501729912913268;0.5016750093740149;14508;3627;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;0.006499290466308594;0.01216578483581543;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298839368624817,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298839368624817,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6102916354704391;0.5985010462305624;0.4504537677053798;0.4414131100400117;0.0;0.0003786444528587656;0.0;1.0;0.0;0.0001893580761219466;0.5;0.5000946790380609;14508;3627;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;0.03869485855102539;0.008274078369140625;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7300510166125586,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7300510166125586,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6154714062581044;0.5971613485308218;0.4499349475189419;0.44162390436720067;0.0;0.0003787161522438932;0.0;1.0;0.0;0.0001893939393939394;0.5;0.500094696969697;14508;3627;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;0.006932973861694336;0.009862184524536133;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7297665323297994,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7297665323297994,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6036499586239509;0.6002370167149187;0.45233665796220124;0.4411488060319061;0.0;0.000757002271006813;0.0;0.6666666666666666;0.0;0.0003787161522438932;0.5;0.5001351692823645;14508;3627;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;0.008550882339477539;0.008250951766967773;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298349490310181,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298349490310181,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6040479568112858;0.6001313890983804;0.442531536190373;0.44314429965986074;0.0015128593040847202;0.0007567158531971245;0.5;0.4;0.0007575757575757576;0.0003787161522438932;0.5001620561926153;0.5000267916948495;14508;3627;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;0.008466958999633789;0.01413869857788086;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299444856239988,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299444856239988,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6009145420393796;0.6008653953441391;0.44505257395806186;0.44281305028569984;0.001514004542013626;0.0003785727806170736;1.0;0.5;0.0007575757575757576;0.0001893580761219466;0.5003787878787879;0.5000404902443035;14508;3627;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;0.00690913200378418;0.007529020309448242;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7295848874553846,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7295848874553846,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5806566970091027;0.6060919409288996;0.4308923953185724;0.4464585632545756;0.0392156862745098;0.029379360998898273;0.47368421052631576;0.48484848484848486;0.020454545454545454;0.015148646089755729;0.5037253221420972;0.5029682755754945;14508;3627;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;0.008214712142944336;0.007668256759643555;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298828378758425,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298828378758425,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6107706716441919;0.5984105111583979;0.46056482642324925;0.43908607171201497;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;14508;3627;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;0.008361101150512695;0.008646726608276367;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299169471559718,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299169471559718,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6002114775846896;0.6010739108673251;0.4478661884199953;0.44197374728257;0.0030234315948601664;0.001512001512001512;0.6666666666666666;0.4;0.0015151515151515152;0.0007574323044877864;0.5005408440714032;0.5000535833896992;14508;3627;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;0.00964808464050293;0.008374214172363281;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7296908398519469,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7296908398519469,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6055550629835416;0.5996855038789264;0.447526445139665;0.44206532700200857;0.001514004542013626;0.0003785727806170736;1.0;0.5;0.0007575757575757576;0.0001893580761219466;0.5003787878787879;0.5000404902443035;14508;3627;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;0.007833242416381836;0.007611751556396484;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299220780595126,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299220780595126,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6031678948128883;0.6002936886914236;0.45067403485413166;0.4412238184345735;0.0;0.000757002271006813;0.0;0.6666666666666666;0.0;0.0003787161522438932;0.5;0.5001351692823645;14508;3627;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;0.00795602798461914;0.007668018341064453;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7297750912547963,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7297750912547963,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5841941850231838;0.6049709070514531;0.414681286612419;0.4509029698293443;0.04014336917562724;0.04552845528455285;0.37333333333333335;0.49606299212598426;0.021212121212121213;0.023859117591365272;0.5004196713559522;0.5049933931947289;14508;3627;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;0.00682377815246582;0.00822305679321289;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298705806212875,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298705806212875,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5996326273887755;0.6012298599617765;0.44103314843037766;0.4436599154294934;0.0;0.0033987915407854984;0.0;0.5625;0.0;0.0017045454545454545;0.5;0.5004729922764708;14508;3627;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;0.009165287017822266;0.007452726364135742;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298170441154427,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298170441154427,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6038806465171874;0.6001368787792476;0.4466704612451844;0.44223867011917883;0.0015128593040847202;0.0011344299489506524;0.5;0.375;0.0007575757575757576;0.0005680742283658398;0.5001620561926153;0.5000130931453957;14508;3627;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;0.010825157165527344;0.009373903274536133;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7296165571228772,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7296165571228772,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.605944687446638;0.5996471376793697;0.45435761218695436;0.44034659202452453;0.0;0.0003786444528587656;0.0;1.0;0.0;0.0001893580761219466;0.5;0.5000946790380609;14508;3627;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;0.0067901611328125;0.012450695037841797;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299901895520399,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299901895520399,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5963311594488447;0.6020242823668558;0.4381291761757365;0.4446746990372148;0.014947683109118086;0.012345679012345678;0.5555555555555556;0.5076923076923077;0.007575757575757576;0.006248816512024238;0.5020540252984986;0.5013903668557737;14508;3627;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;0.008288860321044922;0.008400201797485352;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298846500889783,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298846500889783,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5987096255139168;0.6014338287105055;0.4391626196729598;0.44422790329984385;0.0015105740181268882;0.004152510381275953;0.25;0.6470588235294118;0.0007575757575757576;0.0020829388373414127;0.4997285928202703;0.500716336656126;14508;3627;4;4;0e771c1190ea4a0ce23c7d5b46c62924
