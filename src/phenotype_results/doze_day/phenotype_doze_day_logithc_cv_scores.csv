;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;0.02109074592590332;0.023954153060913086;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7301094363294458,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7301094363294458,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5832669334565358;0.5913846041596564;0.29058446826655476;0.3011441980251861;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;0.017121076583862305;0.012953996658325195;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7301191075858356,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7301191075858356,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5905564123681581;0.589502559862978;0.30346372811942224;0.29764384669229715;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;0.008064031600952148;0.011619806289672852;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7300322015622854,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7300322015622854,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.6096055512528931;0.5849374910366665;0.31355791456590215;0.2957036793562147;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;0.014992713928222656;0.007636070251464844;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7302329602485249,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7302329602485249,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5759242602458543;0.5932877837877454;0.2859813859773016;0.30243455492166305;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;0.018874168395996094;0.008738994598388672;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7302474234015262,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7302474234015262,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5881292969616323;0.5902253894529469;0.3062005971249091;0.2975565205238163;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;0.012986183166503906;0.009409904479980469;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7300641924810821,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7300641924810821,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5913688343901515;0.5892625727087952;0.3149010947542658;0.2950897793417642;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;0.012140035629272461;0.010463953018188477;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7302378125242939,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7302378125242939,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5969536778091984;0.5879934878998019;0.30034877011338834;0.29878264773566154;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;0.014920949935913086;0.01478886604309082;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7301554102942623,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7301554102942623,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5878961394330454;0.5902708721744456;0.29202328932997373;0.3010589841556425;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;0.011816263198852539;0.008882999420166016;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.730257273032047,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.730257273032047,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5985573185311825;0.5875698279728181;0.30849996552417475;0.29686479753484163;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;0.01071310043334961;0.019062042236328125;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7300244279078771,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7300244279078771,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5723751974053384;0.5941997103700613;0.28630894150193953;0.302636745309682;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;0.010951757431030273;0.007704257965087891;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7302797426678893,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7302797426678893,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5854895623857532;0.5908933065219215;0.294580331700033;0.30032618517742377;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;0.011644840240478516;0.020656108856201172;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.730140671025892,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.730140671025892,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.6020811618527686;0.5867146608423366;0.31427280760459003;0.29522313669447275;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;0.027032136917114258;0.016201019287109375;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7302965420840353,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7302965420840353,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5940531005580565;0.5885285559020913;0.30989776080251774;0.29620828553121636;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;0.017232179641723633;0.013840913772583008;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7300627896497206,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7300627896497206,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5901449935236871;0.5897109021480194;0.2949224380801975;0.3001341760374745;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;0.014002084732055664;0.009029865264892578;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7299638478763107,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7299638478763107,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5749182098145246;0.5934403664008441;0.2866493535022272;0.30222134188717054;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;0.008488893508911133;0.011051177978515625;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7300015361274875,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7300015361274875,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.578613548253181;0.5924652264507766;0.28908117177027487;0.30181647442161036;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;0.014667987823486328;0.020882844924926758;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7304002372541132,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7304002372541132,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.594504694117901;0.5885655136680723;0.30020709026003306;0.29875877239228704;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;0.008958101272583008;0.01677989959716797;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.730066030535999,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.730066030535999,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5868806119055537;0.5904432913714462;0.29499810601920795;0.2997883753337106;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;0.014220952987670898;0.008346080780029297;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7302315807426714,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7302315807426714,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.6022950550133209;0.5866463488470851;0.3107398021569856;0.29606824105843565;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;0.013431072235107422;0.019114971160888672;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7300472904355035,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7300472904355035,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5839365266484182;0.5912099024721585;0.30302743370171126;0.2980268873159836;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;0.016688108444213867;0.02239084243774414;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7301300617174701,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7301300617174701,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.590399433387718;0.5895676283172705;0.3004759426322945;0.2986469958306589;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;0.01248788833618164;0.011104106903076172;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7300937468818517,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7300937468818517,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.6039046475449901;0.5862367675154467;0.303822959254506;0.2977245759304812;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;0.015469074249267578;0.009053230285644531;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7303637760365,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7303637760365,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5884643512639041;0.5901954220639654;0.3006562555647512;0.29890486377490233;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;0.010834217071533203;0.01937580108642578;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7298643894207575,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7298643894207575,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.590806574368978;0.589484005413621;0.3108789181607149;0.29642837095296637;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;0.0077822208404541016;0.019992828369140625;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('logithc',
                 WrapModel(C=0.7303064461166676,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, l1_ratio=None, max_iter=100,
                           model=LogisticRegressionHeuristicC(C=0.7303064461166676,
                                                              penalty='l1',
                                                              solver='liblinear'),
                           multi_class='deprecated', n_jobs=None, penalty='l1',
                           random_state=None, solver='liblinear', tol=0.0001,
                           verbose=0, warm_start=False))])";0.5747732722474514;0.5935533577878314;0.28504447544323;0.3024257887242885;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;4;4;0e771c1190ea4a0ce23c7d5b46c62924
