;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;171.0129358768463;0.21025419235229492;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5508549937902391;0.670489469292136;0.2766394643183412;0.3798681855795729;0.06147540983606557;0.07049608355091384;0.42857142857142855;0.6521739130434783;0.033112582781456956;0.03726193762075628;0.5098784950635165;0.5156259604631327;15603;3901;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;145.4471938610077;0.37720704078674316;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5438724216593513;0.671665283522957;0.26057343088513246;0.38768421291070254;0.05639476334340383;0.0939015054860934;0.3218390804597701;0.6216216216216216;0.03090507726269316;0.05078664090532708;0.5056027890487088;0.5207188630236151;15603;3901;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;140.9723949432373;0.1817951202392578;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5386838623607411;0.6757553876941835;0.25423718218895563;0.38969307952937127;0.05108055009823183;0.11186355655881615;0.23214285714285715;0.6126373626373627;0.02869757174392936;0.06155120066243445;0.49999152376845885;0.5248907923178616;15603;3901;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;137.06801295280457;0.15132498741149902;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5420524273347411;0.671983794409396;0.26279677312393435;0.3802698752934132;0.041237113402061855;0.07823834196891191;0.3125;0.6371308016877637;0.02207505518763797;0.041678167264697766;0.5036919516338858;0.5172497681064725;15603;3901;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;136.24691605567932;0.3889620304107666;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5363499017699849;0.6756992775855271;0.2581369825030766;0.38431977628288794;0.0395010395010395;0.08577298407806883;0.3333333333333333;0.6185185185185185;0.020994475138121547;0.04608167770419426;0.5041533310582094;0.5187420074664544;15604;3900;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;137.40706515312195;0.37843894958496094;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5502353075582188;0.67161081791946;0.2715774426715919;0.38208232277356646;0.05714285714285714;0.08187435633367662;0.3783783783783784;0.6091954022988506;0.03090507726269316;0.043886282086668504;0.5077730728550528;0.5176860458847365;15603;3901;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;134.10808396339417;0.36888980865478516;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.55;0.6717163392663363;0.26853573762732047;0.3836861470718429;0.04285714285714286;0.09295199182839632;0.28378378378378377;0.621160409556314;0.023178807947019868;0.05023461219983439;0.502741323839954;0.5204845848979138;15603;3901;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;130.58315110206604;0.15462970733642578;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.545042510143838;0.67353329935761;0.2607809945474973;0.3866305986210129;0.045174537987679675;0.08313968499870901;0.3235294117647059;0.644;0.024282560706401765;0.04443831079216119;0.5044618145769071;0.5185046311890689;15603;3901;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;128.18359923362732;0.14341402053833008;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5324542007097922;0.6745162721750346;0.2522040989241064;0.38576616383580686;0.04737384140061792;0.08109504132231404;0.35384615384615387;0.6305220883534136;0.025386313465783666;0.04333425338117582;0.5056814705893192;0.517827393802441;15603;3901;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;132.2622091770172;0.1533041000366211;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5647594978739889;0.6698137325085591;0.2760309594151572;0.38107760458830847;0.04175365344467641;0.07532467532467532;0.37735849056603776;0.6415929203539823;0.022099447513812154;0.04001103752759382;0.5055405417869562;0.5166248843731458;15604;3900;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;133.42334580421448;0.3671712875366211;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5390170151134893;0.675111742037631;0.2568299478906817;0.3861662344231173;0.04679552390640895;0.09647118558009647;0.2987012987012987;0.6012658227848101;0.025386313465783666;0.052442727021805136;0.5036781316911556;0.520962598903223;15603;3901;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;126.89763879776001;0.1518571376800537;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5516521280869146;0.6717963097019275;0.2671019508756426;0.38721894484368546;0.05226130653266332;0.08511735878256384;0.29213483146067415;0.6496062992125984;0.02869757174392936;0.04554236820314656;0.5038312566566058;0.5190566598945616;15603;3901;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;126.59005403518677;0.3598051071166992;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.54906208655338;0.6714814275517619;0.27357887047734164;0.3798140677368559;0.0511770726714432;0.0856190720328121;0.352112676056338;0.6007194244604317;0.02759381898454746;0.04609439690863925;0.5061174437159799;0.5184144772523163;15603;3901;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;124.35300421714783;0.15029096603393555;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5552206215657443;0.6703898345618813;0.27450874204753295;0.3805412318693804;0.05708460754332314;0.08062015503875969;0.37333333333333335;0.631578947368421;0.03090507726269316;0.04305823902842948;0.5076061279468724;0.517731122853113;15603;3901;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;123.74745178222656;0.15373802185058594;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5395923223789189;0.6734876376005631;0.2618729989951333;0.38530299007261115;0.0392156862745098;0.09214230867673406;0.296875;0.6360424028268551;0.020994475138121547;0.04966887417218543;0.5029847167009472;0.52053560570045;15604;3900;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;122.45915794372559;0.1442580223083496;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5374874238521156;0.6727350580160052;0.2613383590322298;0.38379270969793433;0.054989816700611;0.09290454313425217;0.35526315789473684;0.6169491525423729;0.029801324503311258;0.05023461219983439;0.5067203617508209;0.5204011124438237;15603;3901;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;123.67276692390442;0.3517429828643799;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5359804972968192;0.6757176718765336;0.2539347207468726;0.3855500009171309;0.05236656596173213;0.08766982824916689;0.2988505747126437;0.6151079136690647;0.02869757174392936;0.04719845431962462;0.5041651464729663;0.5191334508659893;15603;3901;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;120.23202395439148;0.14359211921691895;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5566525518984916;0.6698226112432304;0.2711126847599957;0.38104097052528196;0.049079754601226995;0.08101135190918472;0.3333333333333333;0.6205533596837944;0.026490066225165563;0.04333425338117582;0.5052316775199284;0.5176604488942608;15603;3901;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;119.6182279586792;0.14527416229248047;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5356838291928785;0.674523748523738;0.25733200139861945;0.3876635822433969;0.06120434353405726;0.10767295597484276;0.2897196261682243;0.6079545454545454;0.03421633554083885;0.05906707148771736;0.5044203547487166;0.5237739364116383;15603;3901;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;125.97065496444702;0.35601091384887695;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5437096818823269;0.6721012439791116;0.2578581646296124;0.3858566390092618;0.04838709677419355;0.08822775070530905;0.27586206896551724;0.6254545454545455;0.026519337016574586;0.04746136865342163;0.5027421392929283;0.5194318529410681;15604;3900;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;122.33431887626648;0.14635705947875977;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5367356189675949;0.67535672205539;0.2577157335376548;0.38745223800476114;0.059548254620123205;0.07964830618050169;0.4264705882352941;0.6311475409836066;0.03200883002207505;0.04250621032293679;0.5094935635920058;0.5174968447274116;15603;3901;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;122.79603409767151;0.14686894416809082;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.560335290237224;0.6681440615212492;0.2800791216231272;0.3779978689603225;0.045785639958376693;0.07674358309567021;0.4;0.6324786324786325;0.024282560706401765;0.040850124206458734;0.506632098383251;0.516835746577353;15603;3901;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;122.10592293739319;0.3512101173400879;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5412527133154227;0.67384146546572;0.2704594275905406;0.3828403304603285;0.06464646464646465;0.08337622233659289;0.38095238095238093;0.6159695817490495;0.03532008830022075;0.04471432514490754;0.5089789089247347;0.5181418036409011;15603;3901;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;121.72603178024292;0.146697998046875;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5384811698673654;0.6737881518419926;0.2632170244282357;0.38630884169151014;0.052899287894201424;0.08925365478327776;0.33766233766233766;0.6304347826086957;0.02869757174392936;0.04802649737786365;0.5058345955547694;0.5197561535303341;15603;3901;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;119.57829928398132;0.14273285865783691;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.5520034311329195;0.671055224030485;0.26527200998217315;0.381703349559505;0.04175365344467641;0.07919254658385093;0.37735849056603776;0.6375;0.022099447513812154;0.042218543046357616;0.5055405417869562;0.5174782197702572;15604;3900;4;4;0e771c1190ea4a0ce23c7d5b46c62924
