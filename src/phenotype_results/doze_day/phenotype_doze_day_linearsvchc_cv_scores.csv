;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;0.011570215225219727;0.008861064910888672;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302496762819393,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302496762819393,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5852466389381386;0.5946073174698662;0.3012360806809056;0.29756374986184636;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;0.009778261184692383;0.008445978164672852;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7300235945259876,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7300235945259876,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6156034300114854;0.587131309252408;0.32915384790439106;0.291168080318125;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;0.0081939697265625;0.010598182678222656;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.729921226897413,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.729921226897413,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5885519463865565;0.593779968967811;0.29294093987221037;0.2994039323186847;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;0.007995843887329102;0.0075531005859375;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299564114620892,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299564114620892,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5925763608271928;0.592504392186856;0.29668014405560206;0.29806092752393176;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;0.0069179534912109375;0.007441997528076172;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301370316124387,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301370316124387,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5797960568512442;0.5960140090796372;0.2782979148552793;0.3041204108526187;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;0.008239030838012695;0.008227109909057617;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299983264826517,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299983264826517,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5929613770596609;0.5927051220579455;0.3029374422046634;0.29681973557269986;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;0.007521867752075195;0.008296012878417969;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7298940101405609,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7298940101405609,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6041767489230107;0.5898894589185395;0.29929289120221075;0.2991348682063757;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;0.008959054946899414;0.012949943542480469;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7300075168879644,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7300075168879644,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5991540197073265;0.5911447787406046;0.30365647430003784;0.29663760354597685;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;0.007511138916015625;0.008651018142700195;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302761835675909,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302761835675909,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5879252584977419;0.5939281530697448;0.31058499060575506;0.2959128059324297;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;0.009226083755493164;0.007616996765136719;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301083100428659,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301083100428659,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.578666654272674;0.5961496747727983;0.28266686729437573;0.30201403994384035;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;0.00727391242980957;0.013012170791625977;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301947732824859,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301947732824859,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5925172002363988;0.5927976523167453;0.3065696824700832;0.29617380763446904;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;0.00717616081237793;0.00760197639465332;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301668633064294,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301668633064294,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5880745027635604;0.5939327188063622;0.3054661007793381;0.29642060266508846;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;0.007995843887329102;0.007600069046020508;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299058380242329,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299058380242329,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6087961878849377;0.5886496091987365;0.30074727344950447;0.29772894536846317;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;0.008867025375366211;0.007771015167236328;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299001439784353,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299001439784353,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.578763444853815;0.5962566626256844;0.2858353182058886;0.30126147596066444;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;0.007604122161865234;0.008487939834594727;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.730097350204665,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.730097350204665,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.595048476003681;0.5921390475571546;0.29724624502619884;0.29826827396643557;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;0.008321762084960938;0.008862972259521484;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299617588809768,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299617588809768,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5827075829718589;0.5952577237737516;0.2912241644200795;0.3003374205509587;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;0.010836124420166016;0.009459972381591797;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7300229513301357,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7300229513301357,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5999864330928459;0.5909558390832483;0.29849679684500496;0.2983192578776265;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;0.007364034652709961;0.00872492790222168;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7300234223269839,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7300234223269839,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6021145790355973;0.5903740494191256;0.3041016857613391;0.2969429249708305;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;0.006844997406005859;0.008307933807373047;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299874628935558,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299874628935558,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5910155321487996;0.5931272788607682;0.3030799317175026;0.29682327289552535;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;0.007901906967163086;0.008955955505371094;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302701976373297,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302701976373297,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5865672668457599;0.5941857158588085;0.29857045972969576;0.2976757844653864;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;0.0073299407958984375;0.007621288299560547;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299333755832079,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299333755832079,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5862111902823776;0.5943955326990344;0.2998082753842271;0.29770008320404084;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;0.007820606231689453;0.007718324661254883;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301266919284565,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301266919284565,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5791077063749596;0.5962009122157177;0.28661699729446327;0.30122980658299187;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;0.0075948238372802734;0.009038209915161133;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302086367542384,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302086367542384,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.5876117411359776;0.5939759468248451;0.2918214753707773;0.2995311586762686;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;0.007904052734375;0.008543968200683594;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7299420261038843,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7299420261038843,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.60274171024483;0.5902185963867206;0.3144616981231529;0.29412181258564774;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15603;3901;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;0.007363796234130859;0.00906991958618164;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.730052147383303,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.730052147383303,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6072832058301341;0.5891367618190054;0.3011986134188993;0.2972666223447251;0.0;0.0;0.0;0.0;0.0;0.0;0.5;0.5;15604;3900;4;4;0e771c1190ea4a0ce23c7d5b46c62924
