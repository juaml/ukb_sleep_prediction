;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;74.82480120658875;0.08793377876281738;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6239134344866096;0.7760986272069219;0.36181958311271456;0.5512990720238959;0.28415300546448086;0.38952879581151834;0.4444444444444444;0.6391752577319587;0.20883534136546184;0.28012048192771083;0.5609684728217683;0.6137312540029728;7974;1994;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;73.84394001960754;0.08160281181335449;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6623163778107081;0.7685984660809738;0.37722814782575353;0.5495579087755753;0.2668500687757909;0.39148639218422887;0.42358078602620086;0.6418764302059496;0.19477911646586346;0.2816265060240964;0.5532719111741082;0.6146514342223458;7974;1994;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;74.52985692024231;0.20662379264831543;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.643144771599768;0.7716210042443261;0.38818869984411664;0.540287255514702;0.3076923076923077;0.39727427597955706;0.453125;0.6182396606574762;0.23293172690763053;0.29267068273092367;0.5696744196035479;0.6162450705530245;7974;1994;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;73.98840999603271;0.22792720794677734;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.63595116250957;0.7726249725628236;0.3845664404291536;0.5424827880567302;0.3100137174211248;0.3853913043478261;0.48917748917748916;0.6274065685164213;0.22690763052208834;0.2781124497991968;0.5739889323179004;0.6115616569570946;7975;1993;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;71.93987083435059;0.08543610572814941;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6297853621845241;0.7733834804368737;0.3859738463532246;0.5372197773038669;0.2824207492795389;0.3744740532959327;0.5;0.6209302325581395;0.19678714859437751;0.2680722891566265;0.5656176545647473;0.6067922869817898;7975;1993;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;73.15235090255737;0.09415292739868164;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6687653018491078;0.7671127925275156;0.4117229326493816;0.536146863826159;0.32054794520547947;0.3561842582517229;0.5043103448275862;0.6418300653594772;0.23493975903614459;0.2464859437751004;0.5790340506410669;0.6003409324358618;7974;1994;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;88.80864214897156;0.09516477584838867;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6166316334858148;0.7769977855252503;0.35769198014430403;0.549231215233751;0.2887700534759358;0.4067796610169492;0.432;0.6263048016701461;0.21686746987951808;0.30120481927710846;0.5609738418916307;0.6206793069972971;7974;1994;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;92.4375970363617;0.12139201164245605;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6361126323475721;0.7722819563106991;0.373519200386134;0.5445633428245551;0.2566995768688293;0.38045007032348804;0.4312796208530806;0.6349765258215962;0.1827309236947791;0.2715863453815261;0.5512585099757318;0.6097985220722408;7974;1994;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;89.54382419586182;0.11249399185180664;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.631793394313038;0.7731210652404034;0.37020059178488257;0.5458524871086584;0.304;0.394646533973919;0.4523809523809524;0.6236442516268981;0.2289156626506024;0.28865461847389556;0.5683039851714551;0.6153284792185624;7975;1993;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;89.71354675292969;0.11080503463745117;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6339579051993929;0.7737483864926529;0.39502813403302905;0.544064257432671;0.2913719943422914;0.3818565400843882;0.49282296650717705;0.6373239436619719;0.20682730923694778;0.27259036144578314;0.5679621496017515;0.610472015086923;7975;1993;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;92.70561695098877;0.3029317855834961;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6273630618731612;0.7746354441503895;0.37073413195812266;0.5494955366606891;0.2786206896551724;0.38707411310151035;0.44493392070484583;0.6444444444444445;0.20281124497991967;0.27660642570281124;0.5592933230247192;0.6128936508320142;7974;1994;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;89.2419970035553;0.24291205406188965;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6309274531280201;0.7744424286916975;0.36375528328593093;0.5451801450522604;0.2640449438202247;0.38624522403612366;0.4392523364485981;0.6268320180383314;0.18875502008032127;0.2791164658634538;0.5542705581685029;0.6118919006014026;7974;1994;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;84.04839491844177;0.08841514587402344;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6360435055730945;0.772373512773931;0.38033520803820037;0.5458737656475018;0.296;0.39140976792518184;0.44047619047619047;0.6312849162011173;0.22289156626506024;0.2836345381526104;0.5643201146833323;0.6142345208315709;7974;1994;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;73.74775815010071;0.09224915504455566;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.63987186203006;0.7693339377902719;0.38357440547153376;0.5394924833351703;0.2542372881355932;0.3845080251221214;0.42857142857142855;0.6304347826086957;0.18072289156626506;0.27660642570281124;0.5502276665189185;0.6113100656008624;7975;1993;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;73.69640016555786;0.09522294998168945;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6340673731716162;0.7741213474993069;0.3896670230641245;0.5422437887978675;0.3108108108108108;0.390899689762151;0.47520661157024796;0.6237623762376238;0.23092369477911648;0.28463855421686746;0.5729869310015984;0.6137382976666821;7975;1993;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;73.37411999702454;0.2093050479888916;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6286959334664863;0.7748156198850904;0.34911232727156305;0.5552281404823285;0.26040268456375837;0.39652777777777776;0.39271255060728744;0.6430180180180181;0.19477911646586346;0.28664658634538154;0.5472558683933596;0.6168271380406278;7974;1994;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;74.75578594207764;0.21011781692504883;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6469762740802782;0.7696514493279034;0.3881483151369345;0.5397772988288032;0.2828854314002829;0.3763707110010612;0.4784688995215311;0.637125748502994;0.20080321285140562;0.26706827309236947;0.5639711251422803;0.6082081586123833;7974;1994;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;72.22937893867493;0.08468508720397949;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.640391109894122;0.7708632507294306;0.3685430003523677;0.5439148019988296;0.26721763085399447;0.37755822159491886;0.42543859649122806;0.6353919239904988;0.19477911646586346;0.26857429718875503;0.5536061357730387;0.6086268343182157;7974;1994;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;72.03507494926453;0.09659767150878906;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6305247746840205;0.7739333147398217;0.37401137868949696;0.5437652453142752;0.26685393258426965;0.38857938718662954;0.4439252336448598;0.634090909090909;0.19076305220883535;0.28012048192771083;0.5555821950007387;0.6131506638286389;7975;1993;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;72.72707200050354;0.2003178596496582;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.623775369034667;0.776532294983041;0.36011418530942907;0.5500439148998565;0.2981029810298103;0.3858543417366947;0.4583333333333333;0.6377314814814815;0.22088353413654618;0.27660642570281124;0.5669635061987078;0.61214576675413;7975;1993;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;72.06366634368896;0.2099597454071045;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6168974024440006;0.778648319456361;0.3514357713375258;0.5544665876726009;0.2879177377892031;0.4068259385665529;0.4;0.6353944562899787;0.2248995983935743;0.2991967871485944;0.5563000665764662;0.6210126363024817;7974;1994;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;72.59407997131348;0.20792698860168457;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6465024536649271;0.7698257926389611;0.38072829283379733;0.5441701870774656;0.2679830747531735;0.37637851298470293;0.45023696682464454;0.645909645909646;0.19076305220883535;0.26556224899598396;0.5566114726284819;0.6085417396768619;7974;1994;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;71.63152503967285;0.09188604354858398;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6291402239975946;0.7769500771390476;0.3616224565445534;0.5524507369723135;0.26519337016574585;0.3994461751471097;0.4247787610619469;0.6432552954292085;0.1927710843373494;0.2896586345381526;0.5529363443077121;0.6180824098802431;7974;1994;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;72.45013499259949;0.08800005912780762;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6470886892049805;0.7687760904893182;0.3961119302751722;0.5362413088318353;0.30962343096234307;0.38658367911479946;0.5068493150684932;0.6211111111111111;0.22289156626506024;0.28062248995983935;0.5753253817947375;0.6118138356534948;7975;1993;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;72.31728887557983;0.19993185997009277;"GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=Pipeline(steps=[('set_column_types',
                                        SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                                               'AgeAtScan']})),
                                       ('zscore',
                                        JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                                            copy=True,
                                                            name='zscore',
                                                            transformer=StandardScaler(),
                                                            with_mean=True,
                                                            with_std=True)),
                                       ('rf',
                                        WrapModel...
                                                  min_samples_leaf=1,
                                                  min_samples_split=2,
                                                  min_weight_fraction_leaf=0.0,
                                                  model=RandomForestClassifier(),
                                                  monotonic_cst=None,
                                                  n_estimators=100, n_jobs=None,
                                                  oob_score=False,
                                                  random_state=None, verbose=0,
                                                  warm_start=False))]),
             param_grid={'rf__criterion': ['gini', 'entropy', 'log_loss'],
                         'rf__max_features': ['sqrt', 'log2'],
                         'rf__n_estimators': [200, 500]},
             scoring='balanced_accuracy')";0.6416045452713866;0.7699130551958796;0.3886503631186606;0.5391390585640554;0.26262626262626265;0.3631805157593123;0.4666666666666667;0.63375;0.1827309236947791;0.2545180722891566;0.5565828531517374;0.6027729923538379;7975;1993;4;4;0e771c1190ea4a0ce23c7d5b46c62924
