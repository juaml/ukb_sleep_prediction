;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;0.00825810432434082;0.0107879638671875;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301826773617396,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301826773617396,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6613229691001336;0.7007692246912101;0.39943227970610706;0.450495161099249;0.13263525305410123;0.14685314685314685;0.5588235294117647;0.6245353159851301;0.07524752475247524;0.08320950965824665;0.5275498872922887;0.5331244861473433;7974;1994;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;0.008266925811767578;0.006670951843261719;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.730295170763868,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.730295170763868,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.7094674477521627;0.6888210613778675;0.47341326274657225;0.4315705484296708;0.09174311926605505;0.08018433179723503;0.625;0.5761589403973509;0.04950495049504951;0.04309063893016345;0.5197155377055502;0.5161716838647459;7974;1994;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;0.005027055740356445;0.007691144943237305;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302736870490643,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302736870490643,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6962896222463079;0.6918937183241157;0.4286427083416005;0.4425847370462568;0.1009009009009009;0.1009090909090909;0.56;0.6132596685082873;0.055445544554455446;0.0549777117384844;0.5203352638823319;0.5216114419313749;7974;1994;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;0.010546207427978516;0.006444692611694336;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.730182668201575,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.730182668201575,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6994320786295266;0.6912185865941758;0.46431965696163036;0.4334053750313902;0.09523809523809523;0.08520384791571232;0.6190476190476191;0.5705521472392638;0.051587301587301584;0.04603960396039604;0.5204209174155446;0.5171423880423307;7975;1993;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;0.008933305740356445;0.006510734558105469;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303567932622306,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303567932622306,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6969052752049398;0.6918311883314024;0.4429055484852665;0.43883259875637387;0.08872458410351201;0.0919435593991807;0.6666666666666666;0.5674157303370787;0.047524752475247525;0.05002476473501734;0.5197301181731077;0.5185483125219748;7975;1993;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;0.007337808609008789;0.006386995315551758;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303102728805942,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303102728805942,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.701827261302356;0.6907079636817156;0.4495627222893025;0.43707493738548453;0.12880143112701253;0.09380692167577413;0.6666666666666666;0.5819209039548022;0.07128712871287128;0.05101535413571075;0.5295992393060662;0.5192944109049671;7974;1994;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;0.012806177139282227;0.006531953811645508;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303550189265765,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303550189265765,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.7110174281363664;0.6883925961135793;0.444604867065702;0.43775980625219846;0.0419047619047619;0.0871559633027523;0.55;0.5900621118012422;0.02178217821782178;0.0470529965329371;0.5078689265837262;0.5179849365536222;7974;1994;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;0.00870203971862793;0.011785030364990234;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301778854805419,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301778854805419,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6784425722625991;0.6964329216689975;0.45833803947496776;0.4344424721890725;0.16225749559082892;0.10786516853932585;0.7419354838709677;0.5825242718446602;0.09108910891089109;0.05943536404160475;0.5401718210773394;0.522496859182851;7974;1994;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;0.017676115036010742;0.0076749324798583984;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.730294949270501,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.730294949270501,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6967723624036586;0.6918902910442177;0.44564363014796793;0.43816610431047465;0.08073394495412844;0.09393524851801185;0.5365853658536586;0.5953757225433526;0.04365079365079365;0.05099009900990099;0.5154452759388958;0.5196176355670832;7975;1993;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;0.0053632259368896484;0.0062999725341796875;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301465882600092,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301465882600092,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6753899180240605;0.6971134447729777;0.40535928933660753;0.4493091409605561;0.13217391304347825;0.12929112795363354;0.5428571428571428;0.6473214285714286;0.07524752475247524;0.0718177315502724;0.5268710742041947;0.5292768980115364;7975;1993;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;0.005187034606933594;0.010104656219482422;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303518336030101,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303518336030101,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.694101962244579;0.6925882121524776;0.44659070331412765;0.4379661626957439;0.08807339449541285;0.10407239819004525;0.6;0.6020942408376964;0.047524752475247525;0.05695889053987122;0.5183896428595176;0.5220982529945367;7974;1994;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;0.011811971664428711;0.02931690216064453;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302608491984306,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302608491984306,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6877178517045794;0.6942135356431283;0.4441017726065211;0.4381867929275277;0.12857142857142856;0.1089599279603782;0.6545454545454545;0.599009900990099;0.07128712871287128;0.05993065874195146;0.5292634434699346;0.5231643218143006;7974;1994;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;0.005557060241699219;0.0064029693603515625;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7300454647753697,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7300454647753697,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.7079420702312005;0.6890665462322878;0.45389187695966837;0.43673551519108395;0.09872029250457039;0.07841328413284133;0.6428571428571429;0.5704697986577181;0.053465346534653464;0.04210004952947004;0.5216957357253522;0.5156763891643992;7974;1994;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;0.005486011505126953;0.006340980529785156;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303280107256458,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303280107256458,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6745905156331617;0.6974354274218355;0.4266708690092752;0.4430778557169554;0.13120567375886524;0.129547471162378;0.6166666666666667;0.6239316239316239;0.07341269841269842;0.07227722772277227;0.5289830449753217;0.5287498649109243;7975;1993;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;0.005379915237426758;0.014555931091308594;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303410237160194,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303410237160194,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6992680719684872;0.6913417147574868;0.4360765819498702;0.44087146064753835;0.08333333333333333;0.09332113449222323;0.48936170212765956;0.6107784431137725;0.04554455445544554;0.05052005943536404;0.5147077610986905;0.519803347380543;7975;1993;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;0.013386011123657227;0.006546974182128906;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303110899808072,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303110899808072,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.7024981880323695;0.690440729110395;0.44332457846749884;0.4383955552481057;0.13427561837455831;0.09227957971676565;0.6229508196721312;0.5941176470588235;0.07524752475247524;0.05002476473501734;0.5299004581452101;0.5192189314858966;7974;1994;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;0.006003141403198242;0.006407737731933594;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7303123071841288,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7303123071841288,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6851298964684917;0.6948564206786161;0.4569262268426825;0.4365517950077074;0.08856088560885608;0.10393131495707185;0.6486486486486487;0.5927835051546392;0.047524752475247525;0.05695889053987122;0.5193970303679125;0.521846363825771;7974;1994;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;0.00757598876953125;0.006579160690307617;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301852662230164,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301852662230164,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6807266488905439;0.6955689214427673;0.40874887205002863;0.44802401069688835;0.09747292418772563;0.12421805183199285;0.5510204081632653;0.634703196347032;0.053465346534653464;0.06884596334819218;0.5193451648724309;0.5277059371736763;7974;1994;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;0.010986089706420898;0.006425142288208008;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302132582399384,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302132582399384,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6981808393829885;0.6916123816411868;0.45909653503389714;0.43497665298664956;0.08163265306122448;0.08858447488584476;0.6285714285714286;0.5705882352941176;0.04365079365079365;0.04801980198019802;0.5174600509556856;0.517880597883466;7975;1993;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;0.008855104446411133;0.008116006851196289;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302971541945106,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302971541945106,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6962651708719259;0.691998254659978;0.44229953523790905;0.4389320705267085;0.08695652173913043;0.10018214936247723;0.5106382978723404;0.6214689265536724;0.047524752475247525;0.05448241703813769;0.5160338816139678;0.521616628263864;7975;1993;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;0.005866050720214844;0.007150173187255859;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7302850842757859,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7302850842757859,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.683225501865163;0.6952689999164112;0.41774956671014885;0.4452137033239601;0.09712230215827339;0.11685393258426967;0.5294117647058824;0.6310679611650486;0.053465346534653464;0.06438831104507181;0.5186735732001676;0.5258129632471371;7974;1994;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;0.005830287933349609;0.0063838958740234375;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301742445004202,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301742445004202,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.7075304709785954;0.6892617530604512;0.47328977934410177;0.4320542988512772;0.07476635514018691;0.08440366972477065;0.6666666666666666;0.5714285714285714;0.039603960396039604;0.045567112431896976;0.5164440218367035;0.5169901053343364;7974;1994;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;0.005156993865966797;0.006186008453369141;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7300658966706038,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7300658966706038,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6887052909454813;0.6938679937736756;0.4328575504181914;0.4416800734574295;0.09800362976406533;0.11659192825112108;0.5869565217391305;0.6161137440758294;0.053465346534653464;0.06438831104507181;0.5203525523808257;0.5253931479658609;7974;1994;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;0.005245208740234375;0.00662684440612793;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7306336324128915,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7306336324128915,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6813144274947499;0.6958003923818076;0.4300306004218153;0.44173945555315647;0.12788632326820604;0.11664423508299686;0.6101694915254238;0.6220095693779905;0.07142857142857142;0.06435643564356436;0.5279909814832582;0.5255451363776176;7975;1993;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;0.015578746795654297;0.010858297348022461;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7301434251661009,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7301434251661009,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.7015909453848611;0.6905049694124754;0.45390983215424946;0.4362776960424557;0.11891891891891893;0.07911683532658693;0.66;0.5548387096774193;0.06534653465346535;0.04259534422981674;0.5269609017353348;0.5155051939416377;7975;1993;4;4;0e771c1190ea4a0ce23c7d5b46c62924
