;fit_time;score_time;estimator;test_roc_auc;train_roc_auc;test_average_precision;train_average_precision;test_f1;train_f1;test_precision;train_precision;test_recall;train_recall;test_balanced_accuracy;train_balanced_accuracy;n_train;n_test;repeat;fold;cv_mdsum
0;0.01026296615600586;0.010481119155883789;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7291737369879243,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7291737369879243,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6199603305785124;0.6201060612362381;0.6677045909932746;0.6709884217711615;0.7269503546099291;0.7208193536994526;0.6528662420382165;0.644865718799368;0.82;0.8170536429143315;0.58827626918536;0.5767676715161976;8384;2097;0;0;0e771c1190ea4a0ce23c7d5b46c62924
1;0.0065097808837890625;0.007367134094238281;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7290297734732822,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7290297734732822,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6220787728175456;0.619761821673878;0.6714107176739335;0.6702140213464386;0.7204262877442273;0.7215838783807672;0.6475095785440613;0.6461928130441665;0.8118494795836669;0.8168901340804483;0.5800687775722349;0.5786044531087011;8385;2096;0;1;0e771c1190ea4a0ce23c7d5b46c62924
2;0.005690097808837891;0.006695985794067383;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7291732940714917,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7291732940714917,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6034404855643665;0.6242949429634168;0.6507731248972566;0.6758157118511674;0.7106782106782107;0.7170490328385065;0.6467498358502954;0.6513566525008173;0.7886309047237791;0.7974784870922553;0.5767239529522084;0.583951758304097;8385;2096;0;2;0e771c1190ea4a0ce23c7d5b46c62924
3;0.007494926452636719;0.007092952728271484;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7292404651900678,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7292404651900678,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6264846588014212;0.6186138483562392;0.6840903639367151;0.6673863384907945;0.7271458478715981;0.7213374395072591;0.6444032158317873;0.6436871859296482;0.8342674139311449;0.8202921753051831;0.577700412986824;0.5752877641579044;8385;2096;0;3;0e771c1190ea4a0ce23c7d5b46c62924
4;0.011845111846923828;0.007300853729248047;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7291823720462474,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7291823720462474,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6286237963215909;0.6181045108765377;0.6844464722316559;0.6672361346046598;0.7231361568078404;0.722071083808688;0.6424129353233831;0.6430134417005314;0.8270616493194556;0.8232939763858315;0.5740975306809792;0.574574969302715;8385;2096;0;4;0e771c1190ea4a0ce23c7d5b46c62924
5;0.016141176223754883;0.007620096206665039;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7292544968836843,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7292544968836843,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6050946871310507;0.623937136722365;0.6603137139283117;0.6729551313073813;0.7086784299603889;0.7179441099829275;0.6444007858546169;0.6513940975052992;0.7872;0.7996397117694155;0.573056906729634;0.5842944721775059;8384;2097;1;0;0e771c1190ea4a0ce23c7d5b46c62924
6;0.005533933639526367;0.006600379943847656;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7293875169289568,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7293875169289568,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6252477779153665;0.6190289143970442;0.6712560823626366;0.6704471922200655;0.7209221096751659;0.7231470124408621;0.6394052044609665;0.6431354215365436;0.8262610088070457;0.8258955373223934;0.5695649790198156;0.5749902716127906;8385;2096;1;1;0e771c1190ea4a0ce23c7d5b46c62924
7;0.005293846130371094;0.006857156753540039;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7289620341329841,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7289620341329841,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6325910787662007;0.6171443420952216;0.6825188455805198;0.6673135049525261;0.7302585604472397;0.7194206482380995;0.6478611283323;0.6438507745810939;0.8366693354683747;0.8150890534320593;0.5830336051603975;0.5750474783098903;8385;2096;1;2;0e771c1190ea4a0ce23c7d5b46c62924
8;0.005603790283203125;0.0066950321197509766;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.729158508905084,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.729158508905084,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6183577322306487;0.6206555692565481;0.6748619352605134;0.6689824790134853;0.7254901960784313;0.7217582417582418;0.6446795270690728;0.6436186892442772;0.8294635708566853;0.8214928957374424;0.577659766538142;0.5752978056018971;8385;2096;1;3;0e771c1190ea4a0ce23c7d5b46c62924
9;0.0057659149169921875;0.006734132766723633;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7290641688296724,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7290641688296724,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6201234895826934;0.620166905338008;0.6660744081620159;0.6716720959642062;0.7148040638606676;0.7189193992713054;0.6536164565361645;0.646579283887468;0.7886309047237791;0.8094856914148489;0.5861690533063996;0.5784441444087232;8385;2096;1;4;0e771c1190ea4a0ce23c7d5b46c62924
10;0.006150007247924805;0.006645917892456055;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7294416466983661,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7294416466983661,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6244826446280992;0.6190808018315479;0.6720187305244463;0.6699716776619352;0.7232992597814593;0.7197587797091167;0.6465028355387523;0.6461783439490446;0.8208;0.8122497998398719;0.5792311688311689;0.578202821997858;8384;2097;2;0;0e771c1190ea4a0ce23c7d5b46c62924
11;0.005266904830932617;0.007597684860229492;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.729109683904385,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.729109683904385,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6068798368092349;0.6235674698798028;0.6719682568688687;0.6701501628113808;0.7034139402560455;0.7236806976951143;0.6327575175943698;0.6516025641025641;0.7918334667734187;0.8136882129277566;0.5570737581800977;0.5860058538074439;8385;2096;2;1;0e771c1190ea4a0ce23c7d5b46c62924
12;0.005860090255737305;0.011400938034057617;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7289369396189049,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7289369396189049,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6354188427483427;0.6162864188406786;0.6752356046445078;0.6690920808115886;0.7371727748691099;0.7190676480897301;0.6534653465346535;0.6395946999220576;0.8454763811048839;0.821092655593356;0.5921596781557477;0.5693420775015186;8385;2096;2;2;0e771c1190ea4a0ce23c7d5b46c62924
13;0.007484912872314453;0.006617069244384766;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7292272743048486,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7292272743048486,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6009643606266358;0.6249255456461598;0.6578710701052441;0.6733264406487335;0.7049946101329501;0.7220197350875633;0.6395045632333768;0.6495521433141395;0.7854283426741393;0.8126876125675405;0.5662678903453341;0.5829966988457538;8385;2096;2;3;0e771c1190ea4a0ce23c7d5b46c62924
14;0.005036115646362305;0.017621994018554688;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7291073554329558,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7291073554329558,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6328377932570377;0.6170206846658172;0.6770616031536195;0.6688045729639267;0.7338028169014085;0.7196909841102624;0.654934003771213;0.6410697528933375;0.8342674139311449;0.8202921753051831;0.5930487010623847;0.5714506921390142;8385;2096;2;4;0e771c1190ea4a0ce23c7d5b46c62924
15;0.014205217361450195;0.0070040225982666016;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7289252930118838,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7289252930118838,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6232604486422668;0.6194480968481988;0.6692909921779949;0.6708266593489559;0.7217453505007153;0.7201769911504424;0.6526520051746443;0.6454631979695431;0.8072;0.8144515612489992;0.5865988193624557;0.5773851666929766;8384;2097;3;0;0e771c1190ea4a0ce23c7d5b46c62924
16;0.005923271179199219;0.0066258907318115234;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7294152350658977,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7294152350658977,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.614833779656547;0.6215772556804448;0.662573814982444;0.6727063393388394;0.7250883392226148;0.7212796041003888;0.6489563567362429;0.6458300363981643;0.8214571657325861;0.816690014008405;0.5831016643302835;0.5780616539935768;8385;2096;3;1;0e771c1190ea4a0ce23c7d5b46c62924
17;0.0051500797271728516;0.02416706085205078;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7291105214861322,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7291105214861322,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6373003952158185;0.6158064378178265;0.6814765760614652;0.6675321495305435;0.7318789584799437;0.7198948290972831;0.6528562460765851;0.6404179011383128;0.8326661329063251;0.8218931358815289;0.589886785461427;0.5706277958038105;8385;2096;3;2;0e771c1190ea4a0ce23c7d5b46c62924
18;0.0055272579193115234;0.01265263557434082;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7291558057264184,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7291558057264184,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6228430205793914;0.6194449255149311;0.6726884546582391;0.6696699455823281;0.7266993693062369;0.7205869353840714;0.6461059190031153;0.6453451551614946;0.8302642113690952;0.8156894136481889;0.5798310431107577;0.5772661944274002;8385;2096;3;3;0e771c1190ea4a0ce23c7d5b46c62924
19;0.007880926132202148;0.006670951843261719;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7291959383950483,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7291959383950483,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6021535055671455;0.6245921992392602;0.6694188623796113;0.6706867795256299;0.6974760042659083;0.7232940335834227;0.6272378516624041;0.6531698661074367;0.7854283426741393;0.8102861717030219;0.5485583271812255;0.5878467458278982;8385;2096;3;4;0e771c1190ea4a0ce23c7d5b46c62924
20;0.006537914276123047;0.007412910461425781;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7291302762454421,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7291302762454421,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6270786304604488;0.6184116714859491;0.6738901976885804;0.6695623162773756;0.7329842931937173;0.7212110605530276;0.6501547987616099;0.6407027363184079;0.84;0.8248598879103283;0.586469893742621;0.571373273353039;8384;2097;4;0;0e771c1190ea4a0ce23c7d5b46c62924
21;0.0057811737060546875;0.007047891616821289;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7290254298758077,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7290254298758077,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6037812540469212;0.6242829227642842;0.6681003293670479;0.6711521482558647;0.6994177583697234;0.7160851835070231;0.6410940627084724;0.6543557469360716;0.7694155324259407;0.7906744046427857;0.5671162668032892;0.5873383829589371;8385;2096;4;1;0e771c1190ea4a0ce23c7d5b46c62924
22;0.00651097297668457;0.010843038558959961;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7290842038699151,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7290842038699151,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6086087287775912;0.6230154562631322;0.6540926677824288;0.6747898543792052;0.7241867043847242;0.71953921134249;0.6485117162761241;0.6456743002544529;0.8198558847077662;0.8124874924954973;0.5823010238178736;0.5774361901674653;8385;2096;4;2;0e771c1190ea4a0ce23c7d5b46c62924
23;0.005455970764160156;0.00906825065612793;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7292613207161933,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7292613207161933,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6228855575605703;0.6194845596850436;0.6747722594940035;0.6691002094010365;0.7162691349234603;0.7208166888592987;0.6448717948717949;0.6477345245692406;0.8054443554843875;0.8124874924954973;0.5756855779783212;0.5803877840281501;8385;2096;4;3;0e771c1190ea4a0ce23c7d5b46c62924
24;0.005727052688598633;0.006738901138305664;"Pipeline(steps=[('set_column_types',
                 SetColumnTypes(X_types={'continuous': ['Sex-0.0',
                                                        'AgeAtScan']})),
                ('zscore',
                 JuColumnTransformer(apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                                     copy=True, name='zscore',
                                     transformer=StandardScaler(),
                                     with_mean=True, with_std=True)),
                ('linearsvcheuristicc',
                 WrapModel(C=0.7292998232743182,
                           apply_to=ColumnTypes<types={'*'}; pattern=.*>,
                           class_weight=None, dual=False, fit_intercept=True,
                           intercept_scaling=1, loss='squared_hinge',
                           max_iter=1000,
                           model=LinearSVCHeuristicC(C=0.7292998232743182,
                                                     dual=False, penalty='l1'),
                           multi_class='ovr', penalty='l1', random_state=None,
                           tol=0.0001, verbose=0))])";0.6379838227134246;0.6156709669249011;0.6854756903089312;0.6668085441658143;0.7255453905700211;0.7230809536285041;0.6472065285624607;0.641462658816238;0.8254603682946358;0.8284970982589553;0.5809710342063498;0.5727491394482498;8385;2096;4;4;0e771c1190ea4a0ce23c7d5b46c62924
